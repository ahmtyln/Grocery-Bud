{"version":3,"sources":["components/Header.js","components/FormList.js","components/ClearItems.js","components/Form.js","components/Alert.js","App.js","index.js"],"names":["Header","className","FormList","inputList","setInputList","alert","setAlert","editItem","deleteItem","id","filter","item","show","msg","bg","length","setTimeout","map","title","completed","type","value","onClick","element","findIndex","elem","newInputList","completeItem","ClearItems","Form","setInput","input","useState","isEditing","setIsEditing","editId","setEditId","onSubmit","e","preventDefault","Date","getTime","toString","onChange","target","placeholder","spesificItem","find","Alert","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc2287f6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"container-header\">\r\n            <h2>Grocery Bud</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { FaEdit } from \"react-icons/fa\"\r\nimport { MdDelete,MdOutlineIncompleteCircle } from \"react-icons/md\"\r\n\r\n\r\nconst FormList = ({ inputList, setInputList, alert, setAlert,editItem}) => {\r\n\r\n    const showAlert = () => {\r\n        const { show, msg, bg } = alert;\r\n        if (inputList.length === 1) {\r\n            setAlert({ show: true, msg: \"List has zero item\", bg: \"info\" })\r\n            setTimeout(() => {\r\n                setAlert(alert)\r\n            }, 1000);\r\n        } else {\r\n            setAlert({ show: true, msg: \"Item Removed\", bg: \"danger\" })\r\n            setTimeout(() => {\r\n                setAlert(alert)\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    const deleteItem = ({ id }) => {\r\n        setInputList(inputList.filter((item) => item.id !== id));\r\n        showAlert();\r\n    }\r\n\r\n    const completeItem = ({id,completed}) =>{\r\n       const element = inputList.findIndex(elem =>elem.id===id);\r\n       const newInputList = [...inputList];\r\n       newInputList[element] = {\r\n           ...newInputList[element],\r\n           completed:!completed,\r\n       };\r\n\r\n       setInputList(newInputList);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container-formlist\">\r\n            {\r\n\r\n                inputList && inputList.map((item) => {\r\n                    const { id, title,completed } = item;\r\n                    return (<div className=\"form-list-container\" key={id}>\r\n                        <li className=\"form-list\" >\r\n                            <input className= { completed ? \"list\" : \"unlist\" }  type=\"text\" value={title} />\r\n                            <div className=\"completed-icon\" onClick={() => completeItem(item)}><MdOutlineIncompleteCircle /></div>\r\n                            <div className=\"edit-icon\" onClick={() => editItem(id)}><FaEdit /></div>\r\n                            <div className=\"delete-icon\" onClick={() => deleteItem(item)}><MdDelete /></div>\r\n                        </li>\r\n                    </div>)\r\n                })\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormList;\r\n","import React from 'react'\r\n\r\nconst ClearItems = ({ inputList, setInputList,alert,setAlert}) => {\r\n    const showAlert = () => {\r\n        const { show, msg, bg } = alert;\r\n        setAlert({ show: true, msg: \"List has zero item\", bg: \"info\" })\r\n        setTimeout(() => {\r\n            setAlert(alert)\r\n        }, 1000);\r\n    }\r\n\r\n    const clearAll = () => {\r\n        setInputList([]);\r\n        showAlert();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {inputList[0] ? <button className=\"clear-items\" onClick={clearAll} type=\"submit\">Clear All</button> : null}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ClearItems\r\n","import React, { useState } from 'react'\r\nimport FormList from './FormList';\r\nimport ClearItems from \"./ClearItems\";\r\n\r\nconst Form = ({ setInput, input, setAlert, alert }) => {\r\n    const [inputList, setInputList] = useState([])\r\n    const[isEditing,setIsEditing] = useState(false)\r\n    const[editId,setEditId] = useState(null)\r\n\r\n    const onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { show, msg, bg } = alert;\r\n        if (!input) {\r\n            setAlert({ show:true, msg:\"enter value\", bg:\"danger\" })\r\n            setTimeout(() => {\r\n                setAlert(alert)\r\n            }, 1000); \r\n        } else if(input && isEditing){\r\n            setInputList(inputList.map((item) =>{\r\n                if(item.id === editId){\r\n                    return {...item,title:input}\r\n                }\r\n                return item\r\n            }))\r\n            setInput(\"\");\r\n            setEditId(null);\r\n            setIsEditing(false);\r\n            setAlert({ show:true, msg:\"Value Changed\", bg:\"success\" })\r\n            setTimeout(() => {\r\n                setAlert(alert)\r\n            }, 1000); \r\n        } else {\r\n            setInputList([...inputList, { id: new Date().getTime().toString(), title: input, completed:true }]);\r\n            setAlert({ show:true, msg:\"Item added\", bg:\"success\" })\r\n            setTimeout(() => {\r\n                setAlert(alert)\r\n            }, 1000);\r\n            setInput(\"\");\r\n        }\r\n\r\n    };\r\n\r\n    const editItem = (id) =>{\r\n        const spesificItem = inputList.find((item) => item.id===id);\r\n        setIsEditing(true);\r\n        setEditId(id);\r\n        setInput(spesificItem.title)\r\n    }\r\n    \r\n\r\n    return (\r\n        <div className=\"container-form\">\r\n            <form className=\"form-control\" onSubmit={onFormSubmit}>\r\n                <input className=\"input-text\" type=\"text\" onChange={(e) => setInput(e.target.value)} value={input} placeholder=\"e.g eggs\" />\r\n                <button className=\"input-submit\" type=\"submit\">{isEditing ? \"Edit\" : \"Submit\" }</button>\r\n                <FormList inputList={inputList} setInputList={setInputList} alert={alert} setAlert={setAlert} editItem={editItem}  />\r\n                <ClearItems inputList={inputList} setInputList={setInputList} alert={alert} setAlert={setAlert} />\r\n            </form>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\r\n\r\nconst Alert = ({ alert }) => {\r\n    const { show, msg, bg } = alert\r\n    return (<div className=\"alert\">\r\n                {\r\n           show &&  <div className = {bg} >\r\n                        <p>{msg}</p>\r\n                    </div > \r\n                }\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Form from './components/Form';\nimport FormList from './components/FormList';\nimport Alert from './components/Alert';\n\n\nfunction App() {\n\n  const [input,setInput] = useState(\"\")\n  const [alert,setAlert] = useState({show:false,msg:\"\",bg:\"\"})\n\n  \n\n  return (\n   <div className=\"container-grocery\">\n      <Alert alert={alert}/>\n      <Header />\n      <Form setInput={setInput} input={input} alert={alert} setAlert={setAlert} />\n   </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}